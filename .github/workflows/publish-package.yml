name: Publish Package to npm

on:
  push:
    branches:
      - main
    paths:
      - "package/package.json"

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 100 # Fetch last 100 commits to ensure we have enough history

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
          scope: "@planning-data"

      - name: Check version change
        id: version-check
        run: |
          # Get the base branch version (before merge)
          BASE_VERSION=$(git show origin/main:package/package.json | grep '"version"' | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[:space:]')
          CURRENT_VERSION=$(cat package/package.json | grep '"version"' | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[:space:]')
          if [ "$BASE_VERSION" = "$CURRENT_VERSION" ]; then
            echo "Version unchanged, skipping publish. BASE_VERSION: $BASE_VERSION, CURRENT_VERSION: $CURRENT_VERSION"
            echo "should_publish=false" >> $GITHUB_OUTPUT
          else
            echo "Version changed from $BASE_VERSION to $CURRENT_VERSION"
            echo "should_publish=true" >> $GITHUB_OUTPUT
          fi

      - name: Install dependencies
        if: steps.version-check.outputs.should_publish == 'true'
        run: npm ci

      - name: Run make publish
        if: steps.version-check.outputs.should_publish == 'true'
        run: make publish

      - name: Publish to npm
        if: steps.version-check.outputs.should_publish == 'true'
        run: cd package && npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create release
        if: steps.version-check.outputs.should_publish == 'true'
        run: |
          gh release create v$CURRENT_VERSION --generate-notes --latest
          gh release list
          gh release view v$CURRENT_VERSION
